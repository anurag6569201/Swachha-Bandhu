# Generated by Django 5.2.1 on 2025-06-07 17:00

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeofenceZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique, human-readable name for the geofence zone.', max_length=100)),
                ('description', models.TextField(blank=True, help_text="An optional description of the zone's purpose.")),
                ('center', django.contrib.gis.db.models.fields.PointField(help_text='The center point (longitude, latitude) of the geofence circle.', srid=4326)),
                ('radius', models.FloatField(help_text='The radius of the geofence circle in meters.', validators=[django.core.validators.MinValueValidator(1.0)])),
                ('color', models.CharField(default='#3388ff', help_text='A CSS-compatible color for displaying the zone on the map.', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Enable or disable this geofence zone for event logging.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('owner', models.ForeignKey(help_text='The user who owns this geofence zone.', on_delete=django.db.models.deletion.CASCADE, related_name='geofence_zones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Geofence Zone',
                'verbose_name_plural': 'Geofence Zones',
                'ordering': ['-created_at'],
                'unique_together': {('owner', 'name')},
            },
        ),
        migrations.CreateModel(
            name='GeofenceEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('ENTER', 'Enter'), ('EXIT', 'Exit'), ('CHECK_IN', 'Check-in')], help_text='The type of event that occurred (Enter, Exit, Check-in).', max_length=10)),
                ('location', django.contrib.gis.db.models.fields.PointField(help_text='The geographic point where the event was triggered.', srid=4326)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True, help_text='The server-side timestamp of when the event was recorded.')),
                ('zone', models.ForeignKey(help_text='The zone associated with this event.', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='geofencing.geofencezone')),
            ],
            options={
                'verbose_name': 'Geofence Event',
                'verbose_name_plural': 'Geofence Events',
                'ordering': ['-timestamp'],
            },
        ),
    ]
